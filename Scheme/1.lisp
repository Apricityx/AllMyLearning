#lang sicp
;The first program
;分好后的文字会被忽略
(begin ;包括子语句的方式
  (display "Hello, World!") ;调用display过程 display + 参数
  (newline)) ;输出换行
;这个代码块只是单纯输出HW而已
;(exit) ;exit过程退出scheme命令行

;===============================================================
;数据类型
;一，布尔值
;#t为True #f为False
(boolean? #t) ;检测参数是否为布尔值
(boolean? 23333) ;应当输出F
;二，常用数据类型：integers 整型 rationals 有理数 reals 实数 complex 复数
;同样，scheme提供多种判断是否为该数据结构的方式
(integer? 123.23) ;是否为整数，应当输出false
;而且，数字前为#b时可以标识该数字为2进制，数字前#o则表明为八进制

;判断1和2是否相等
(= 1 2)

;值得一提的是，expt代表多少多少次方的意思
;例如
(= (expt 2 3) 8) ;输出T
;===============================================================
;字符型数据通过在字符前加#\前缀来表示
;例如#\h 表示h
(char? #\h) ;T
;大小写类型转换过程char-downcase 和char-upcase
;===============================================================
;symbols类型值，当做变量的标识
;创建symbols过程：quote
(eqv?
 (quote xyz) 'xyz
)
;===============================================================
;使用define过程来赋值
(define xyz 9)
xyz
;使用set过程来给变量赋值
(set! xyz 111)
xyz
;===============================================================
;复合数据类型
;字符串是有字符串在一起得到的
;定义全局字符变量:
(define greeting "Hello world;")
greeting
(string-ref greeting 0)
;===============================================================
;if过程
(define a 10)
(define b 20)
(+ b 1)
(
 if (= a b)
    a ;T
    b ;F
 )
;(if (条件) (为真执行) (为假执行))
;===============================================================
;定义过程
(define (square s) (* s s))
(square 5)
;===============================================================
;递归
(define (factorial n)
;具体实现
   (if (= n 1)
       1
       (* n (factorial (- n 1)))))
(factorial 5)
;===============================================================
;递归
;a+a+1+a+2+....+b
;具体实现过程
(define (sum a b)
(if (> a b)
    0 ;T
    (* a (sum (+ a 1) b)) ;F
 )
  )
;===============================================================
;迭代算法斐波拉契数列和




;===============================================================








